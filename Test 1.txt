Test with arrays containing negative numbers:
[3, -5, 2, 7, -1, 0, 4, -2, 9, 6]

Algorithm 1
        Space: 108 bytes
        Time : 7300 nanoseconds

Algorithm 2:
        Space: 56 bytes
        Time : 14500 nanoseconds

Algorithm 3:
        Space: 56 bytes
        Time : 4399 nanoseconds


Test with an array containing duplicate elements and specific patterns:
[1, 3, 3, 5, 5, 7, 7, 9, 9, 11]

Algorithm 1
        Space: 108 bytes
        Time : 12900 nanoseconds

Algorithm 2:
        Space: 56 bytes
        Time : 110500 nanoseconds

Algorithm 3:
        Space: 56 bytes
        Time : 59501 nanoseconds

Test with a larger input size, such as an array with 500 elements.

Algorithm 1
        Space: 4028 bytes
        Time : 952400 nanoseconds

Algorithm 2:
        Space: 2016 bytes
        Time : 2559099 nanoseconds

Algorithm 3:
        Space: 2016 bytes
        Time : 3649599 nanoseconds

Test with an array that has only two elements:
[2, 1]

Algorithm 1
        Space: 44 bytes
        Time : 7000 nanoseconds

Algorithm 2:
        Space: 24 bytes
        Time : 13200 nanoseconds

Algorithm 3:
        Space: 24 bytes
        Time : 1300 nanoseconds

Test with an array that has elements in a "zigzag" pattern, where each element is either greater than both its neighbors or smaller than both its neighbors:
[1, 3, 2, 5, 4, 7, 6, 9, 8, 11]

Algorithm 1
        Space: 108 bytes
        Time : 64200 nanoseconds

Algorithm 2:
        Space: 56 bytes
        Time : 3300 nanoseconds

Algorithm 3:
        Space: 56 bytes
        Time : 2100 nanoseconds

Test with an array that has a few elements sorted in increasing order and a few elements sorted in decreasing order:
[1, 2, 3, 4, 5, 10, 9, 8, 7, 6]


Algorithm 1
        Space: 108 bytes
        Time : 3800 nanoseconds

Algorithm 2:
        Space: 56 bytes
        Time : 52800 nanoseconds

Algorithm 3:
        Space: 56 bytes
        Time : 68700 nanoseconds